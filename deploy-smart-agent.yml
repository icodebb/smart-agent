---
apiVersion: apps/v1
kind: Deployment                 # Type of Kubernetes resource
metadata:
  name: smart-agent                # Name of the Kubernetes resource
spec:
  replicas: 1                    # Number of pods to run at any given time
  selector:
    matchLabels:
      app: smart-agent             # This deployment applies to any Pods matching the specified label
  template:                      # This deployment will create a set of pods using the configurations in this template
    metadata:
      labels:                    # The labels that will be applied to all of the pods in this deployment
        app: smart-agent 
    spec:                        # Spec for the container which will run in the Pod
      containers:
      - name: smart-agent
        image: imiceman/smart-agent:1.0.0
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 9999  # Should match the port number that the Go application listens on
        livenessProbe:           # To check the health of the Pod
          httpGet:
            path: /health
            port: 9999
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 15
          timeoutSeconds: 5
        readinessProbe:          # To check if the Pod is ready to serve traffic or not
          httpGet:
            path: /readiness
            port: 9999
            scheme: HTTP
          initialDelaySeconds: 5
          timeoutSeconds: 1
---
apiVersion: v1
kind: Service
metadata:
  name: smart-agent
spec:
  ports:
  - port: 99
    targetPort: 9999
    protocol: TCP
  selector:
    app: smart-agent
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: smart-agent
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  - host: smart-agent.ice.local
    http:
      paths:
      - path: /
        backend:
          serviceName: smart-agent
          servicePort: 99